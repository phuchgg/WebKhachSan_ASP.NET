#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HaLongParadise
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="halong_paradise")]
	public partial class HaLongParadiseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertImageAlbum(ImageAlbum instance);
    partial void UpdateImageAlbum(ImageAlbum instance);
    partial void DeleteImageAlbum(ImageAlbum instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    #endregion
		
		public HaLongParadiseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["halong_paradiseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HaLongParadiseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HaLongParadiseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HaLongParadiseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HaLongParadiseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ImageAlbum> ImageAlbums
		{
			get
			{
				return this.GetTable<ImageAlbum>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImageAlbum")]
	public partial class ImageAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageAlbumId;
		
		private int _CategoryId;
		
		private System.Nullable<int> _ImageOrder;
		
		private string _ImageTag;
		
		private string _ImageAlbumUrl;
		
		private string _ImageAlbumUrlSmall;
		
		private string _ImageAlbumText;
		
		private System.Nullable<bool> _Ishow;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageAlbumIdChanging(int value);
    partial void OnImageAlbumIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnImageOrderChanging(System.Nullable<int> value);
    partial void OnImageOrderChanged();
    partial void OnImageTagChanging(string value);
    partial void OnImageTagChanged();
    partial void OnImageAlbumUrlChanging(string value);
    partial void OnImageAlbumUrlChanged();
    partial void OnImageAlbumUrlSmallChanging(string value);
    partial void OnImageAlbumUrlSmallChanged();
    partial void OnImageAlbumTextChanging(string value);
    partial void OnImageAlbumTextChanged();
    partial void OnIshowChanging(System.Nullable<bool> value);
    partial void OnIshowChanged();
    #endregion
		
		public ImageAlbum()
		{
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageAlbumId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImageAlbumId
		{
			get
			{
				return this._ImageAlbumId;
			}
			set
			{
				if ((this._ImageAlbumId != value))
				{
					this.OnImageAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._ImageAlbumId = value;
					this.SendPropertyChanged("ImageAlbumId");
					this.OnImageAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageOrder", DbType="Int")]
		public System.Nullable<int> ImageOrder
		{
			get
			{
				return this._ImageOrder;
			}
			set
			{
				if ((this._ImageOrder != value))
				{
					this.OnImageOrderChanging(value);
					this.SendPropertyChanging();
					this._ImageOrder = value;
					this.SendPropertyChanged("ImageOrder");
					this.OnImageOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTag", DbType="NVarChar(200)")]
		public string ImageTag
		{
			get
			{
				return this._ImageTag;
			}
			set
			{
				if ((this._ImageTag != value))
				{
					this.OnImageTagChanging(value);
					this.SendPropertyChanging();
					this._ImageTag = value;
					this.SendPropertyChanged("ImageTag");
					this.OnImageTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageAlbumUrl", DbType="NVarChar(MAX)")]
		public string ImageAlbumUrl
		{
			get
			{
				return this._ImageAlbumUrl;
			}
			set
			{
				if ((this._ImageAlbumUrl != value))
				{
					this.OnImageAlbumUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageAlbumUrl = value;
					this.SendPropertyChanged("ImageAlbumUrl");
					this.OnImageAlbumUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageAlbumUrlSmall", DbType="NVarChar(MAX)")]
		public string ImageAlbumUrlSmall
		{
			get
			{
				return this._ImageAlbumUrlSmall;
			}
			set
			{
				if ((this._ImageAlbumUrlSmall != value))
				{
					this.OnImageAlbumUrlSmallChanging(value);
					this.SendPropertyChanging();
					this._ImageAlbumUrlSmall = value;
					this.SendPropertyChanged("ImageAlbumUrlSmall");
					this.OnImageAlbumUrlSmallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageAlbumText", DbType="NVarChar(500)")]
		public string ImageAlbumText
		{
			get
			{
				return this._ImageAlbumText;
			}
			set
			{
				if ((this._ImageAlbumText != value))
				{
					this.OnImageAlbumTextChanging(value);
					this.SendPropertyChanging();
					this._ImageAlbumText = value;
					this.SendPropertyChanged("ImageAlbumText");
					this.OnImageAlbumTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ishow", DbType="Bit")]
		public System.Nullable<bool> Ishow
		{
			get
			{
				return this._Ishow;
			}
			set
			{
				if ((this._Ishow != value))
				{
					this.OnIshowChanging(value);
					this.SendPropertyChanging();
					this._Ishow = value;
					this.SendPropertyChanged("Ishow");
					this.OnIshowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_ImageAlbum", Storage="_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.ImageAlbums.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.ImageAlbums.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountId;
		
		private string _AccountName;
		
		private string _PassWord;
		
		private EntitySet<Category> _Categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    #endregion
		
		public Account()
		{
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Category", Storage="_Categories", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<Category> Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _CategoryName;
		
		private string _CategoryNameEng;
		
		private System.Nullable<int> _CategoryParent;
		
		private System.Nullable<int> _CategoryOrder;
		
		private int _AccountId;
		
		private string _Title;
		
		private string _Summary;
		
		private string _Content;
		
		private string _TitleEng;
		
		private string _SummaryEng;
		
		private string _ContentEng;
		
		private string _ImageUrl;
		
		private System.Nullable<bool> _IsShow;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<bool> _IsDisplayMain;
		
		private System.Nullable<bool> _IsRoom;
		
		private EntitySet<ImageAlbum> _ImageAlbums;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnCategoryNameEngChanging(string value);
    partial void OnCategoryNameEngChanged();
    partial void OnCategoryParentChanging(System.Nullable<int> value);
    partial void OnCategoryParentChanged();
    partial void OnCategoryOrderChanging(System.Nullable<int> value);
    partial void OnCategoryOrderChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnTitleEngChanging(string value);
    partial void OnTitleEngChanged();
    partial void OnSummaryEngChanging(string value);
    partial void OnSummaryEngChanged();
    partial void OnContentEngChanging(string value);
    partial void OnContentEngChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnIsShowChanging(System.Nullable<bool> value);
    partial void OnIsShowChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnIsDisplayMainChanging(System.Nullable<bool> value);
    partial void OnIsDisplayMainChanged();
    partial void OnIsRoomChanging(System.Nullable<bool> value);
    partial void OnIsRoomChanged();
    #endregion
		
		public Category()
		{
			this._ImageAlbums = new EntitySet<ImageAlbum>(new Action<ImageAlbum>(this.attach_ImageAlbums), new Action<ImageAlbum>(this.detach_ImageAlbums));
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryNameEng", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CategoryNameEng
		{
			get
			{
				return this._CategoryNameEng;
			}
			set
			{
				if ((this._CategoryNameEng != value))
				{
					this.OnCategoryNameEngChanging(value);
					this.SendPropertyChanging();
					this._CategoryNameEng = value;
					this.SendPropertyChanged("CategoryNameEng");
					this.OnCategoryNameEngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryParent", DbType="Int")]
		public System.Nullable<int> CategoryParent
		{
			get
			{
				return this._CategoryParent;
			}
			set
			{
				if ((this._CategoryParent != value))
				{
					this.OnCategoryParentChanging(value);
					this.SendPropertyChanging();
					this._CategoryParent = value;
					this.SendPropertyChanged("CategoryParent");
					this.OnCategoryParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryOrder", DbType="Int")]
		public System.Nullable<int> CategoryOrder
		{
			get
			{
				return this._CategoryOrder;
			}
			set
			{
				if ((this._CategoryOrder != value))
				{
					this.OnCategoryOrderChanging(value);
					this.SendPropertyChanging();
					this._CategoryOrder = value;
					this.SendPropertyChanged("CategoryOrder");
					this.OnCategoryOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(MAX)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleEng", DbType="NVarChar(MAX)")]
		public string TitleEng
		{
			get
			{
				return this._TitleEng;
			}
			set
			{
				if ((this._TitleEng != value))
				{
					this.OnTitleEngChanging(value);
					this.SendPropertyChanging();
					this._TitleEng = value;
					this.SendPropertyChanged("TitleEng");
					this.OnTitleEngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryEng", DbType="NVarChar(MAX)")]
		public string SummaryEng
		{
			get
			{
				return this._SummaryEng;
			}
			set
			{
				if ((this._SummaryEng != value))
				{
					this.OnSummaryEngChanging(value);
					this.SendPropertyChanging();
					this._SummaryEng = value;
					this.SendPropertyChanged("SummaryEng");
					this.OnSummaryEngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentEng", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ContentEng
		{
			get
			{
				return this._ContentEng;
			}
			set
			{
				if ((this._ContentEng != value))
				{
					this.OnContentEngChanging(value);
					this.SendPropertyChanging();
					this._ContentEng = value;
					this.SendPropertyChanged("ContentEng");
					this.OnContentEngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(500)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShow", DbType="Bit")]
		public System.Nullable<bool> IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this.OnIsShowChanging(value);
					this.SendPropertyChanging();
					this._IsShow = value;
					this.SendPropertyChanged("IsShow");
					this.OnIsShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisplayMain", DbType="Bit")]
		public System.Nullable<bool> IsDisplayMain
		{
			get
			{
				return this._IsDisplayMain;
			}
			set
			{
				if ((this._IsDisplayMain != value))
				{
					this.OnIsDisplayMainChanging(value);
					this.SendPropertyChanging();
					this._IsDisplayMain = value;
					this.SendPropertyChanged("IsDisplayMain");
					this.OnIsDisplayMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRoom", DbType="Bit")]
		public System.Nullable<bool> IsRoom
		{
			get
			{
				return this._IsRoom;
			}
			set
			{
				if ((this._IsRoom != value))
				{
					this.OnIsRoomChanging(value);
					this.SendPropertyChanging();
					this._IsRoom = value;
					this.SendPropertyChanged("IsRoom");
					this.OnIsRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_ImageAlbum", Storage="_ImageAlbums", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<ImageAlbum> ImageAlbums
		{
			get
			{
				return this._ImageAlbums;
			}
			set
			{
				this._ImageAlbums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Category", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ImageAlbums(ImageAlbum entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_ImageAlbums(ImageAlbum entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactId;
		
		private string _ContactAddress;
		
		private string _ContactAddressEng;
		
		private string _phone;
		
		private string _Email;
		
		private string _Fax;
		
		private string _DescriptionSort;
		
		private string _Description;
		
		private string _ContactDetail;
		
		private string _DescriptionSortEng;
		
		private string _ContactDetailEng;
		
		private string _DescriptionEng;
		
		private string _ImageUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIdChanging(int value);
    partial void OnContactIdChanged();
    partial void OnContactAddressChanging(string value);
    partial void OnContactAddressChanged();
    partial void OnContactAddressEngChanging(string value);
    partial void OnContactAddressEngChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnDescriptionSortChanging(string value);
    partial void OnDescriptionSortChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnContactDetailChanging(string value);
    partial void OnContactDetailChanged();
    partial void OnDescriptionSortEngChanging(string value);
    partial void OnDescriptionSortEngChanged();
    partial void OnContactDetailEngChanging(string value);
    partial void OnContactDetailEngChanged();
    partial void OnDescriptionEngChanging(string value);
    partial void OnDescriptionEngChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    #endregion
		
		public Contact()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactAddress", DbType="NVarChar(1000)")]
		public string ContactAddress
		{
			get
			{
				return this._ContactAddress;
			}
			set
			{
				if ((this._ContactAddress != value))
				{
					this.OnContactAddressChanging(value);
					this.SendPropertyChanging();
					this._ContactAddress = value;
					this.SendPropertyChanged("ContactAddress");
					this.OnContactAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactAddressEng", DbType="NVarChar(1000)")]
		public string ContactAddressEng
		{
			get
			{
				return this._ContactAddressEng;
			}
			set
			{
				if ((this._ContactAddressEng != value))
				{
					this.OnContactAddressEngChanging(value);
					this.SendPropertyChanging();
					this._ContactAddressEng = value;
					this.SendPropertyChanged("ContactAddressEng");
					this.OnContactAddressEngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionSort", DbType="NVarChar(MAX)")]
		public string DescriptionSort
		{
			get
			{
				return this._DescriptionSort;
			}
			set
			{
				if ((this._DescriptionSort != value))
				{
					this.OnDescriptionSortChanging(value);
					this.SendPropertyChanging();
					this._DescriptionSort = value;
					this.SendPropertyChanged("DescriptionSort");
					this.OnDescriptionSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDetail", DbType="NVarChar(MAX)")]
		public string ContactDetail
		{
			get
			{
				return this._ContactDetail;
			}
			set
			{
				if ((this._ContactDetail != value))
				{
					this.OnContactDetailChanging(value);
					this.SendPropertyChanging();
					this._ContactDetail = value;
					this.SendPropertyChanged("ContactDetail");
					this.OnContactDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionSortEng", DbType="NVarChar(MAX)")]
		public string DescriptionSortEng
		{
			get
			{
				return this._DescriptionSortEng;
			}
			set
			{
				if ((this._DescriptionSortEng != value))
				{
					this.OnDescriptionSortEngChanging(value);
					this.SendPropertyChanging();
					this._DescriptionSortEng = value;
					this.SendPropertyChanged("DescriptionSortEng");
					this.OnDescriptionSortEngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDetailEng", DbType="NVarChar(MAX)")]
		public string ContactDetailEng
		{
			get
			{
				return this._ContactDetailEng;
			}
			set
			{
				if ((this._ContactDetailEng != value))
				{
					this.OnContactDetailEngChanging(value);
					this.SendPropertyChanging();
					this._ContactDetailEng = value;
					this.SendPropertyChanged("ContactDetailEng");
					this.OnContactDetailEngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionEng", DbType="NVarChar(MAX)")]
		public string DescriptionEng
		{
			get
			{
				return this._DescriptionEng;
			}
			set
			{
				if ((this._DescriptionEng != value))
				{
					this.OnDescriptionEngChanging(value);
					this.SendPropertyChanging();
					this._DescriptionEng = value;
					this.SendPropertyChanged("DescriptionEng");
					this.OnDescriptionEngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(1000)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
